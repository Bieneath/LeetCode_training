# Python常用排序算法集合 https://leetcode-cn.com/problems/sort-an-array/solution/shi-da-pai-xu-suan-fa-by-ai-wu-jin-xin-fei-xiang/
class Solution:
    def Quick_sort(self, nums):
        def find_povit(le, ri):
            pivot = nums[ri] # 一般分隔点取列表首位或者末尾，取中间比较纠结
            i = j = le
            for j in range(le, ri):
                if nums[j] <= pivot: # 将<=povit的数值往左边调
                    nums[i], nums[j] = nums[j], nums[i]
                    i += 1
            nums[i], nums[ri] = nums[ri], nums[i] # 最后不要忘记将povit换到现在左右两段列表的中间
            return i # 返回povit所在的下标
        def helper(le, ri):
            if le >= ri: return
            p_idx = find_povit(le, ri)
            helper(le, p_idx - 1)
            helper(p_idx + 1, ri)
        helper(0, len(nums) - 1)

    def sortArray(self, nums: List[int]) -> List[int]:
        # 快速排序
        self.Quick_sort(nums)

        return nums